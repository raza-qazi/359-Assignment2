
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea00050f 	b	9444 <main>

Disassembly of section .text:

000093b8 <EnableJTAG>:
    93b8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    93bc:	e59f0064 	ldr	r0, [pc, #100]	; 9428 <dowaitloop+0xc>
    93c0:	e0211001 	eor	r1, r1, r1
    93c4:	e5801000 	str	r1, [r0]
    93c8:	eb000012 	bl	9418 <dowait>
    93cc:	e59f0058 	ldr	r0, [pc, #88]	; 942c <dowaitloop+0x10>
    93d0:	e59f1058 	ldr	r1, [pc, #88]	; 9430 <dowaitloop+0x14>
    93d4:	e5801000 	str	r1, [r0]
    93d8:	eb00000e 	bl	9418 <dowait>
    93dc:	e0211001 	eor	r1, r1, r1
    93e0:	e5801000 	str	r1, [r0]
    93e4:	e59f0048 	ldr	r0, [pc, #72]	; 9434 <dowaitloop+0x18>
    93e8:	e5901000 	ldr	r1, [r0]
    93ec:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    93f0:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    93f4:	e5801000 	str	r1, [r0]
    93f8:	e59f0038 	ldr	r0, [pc, #56]	; 9438 <dowaitloop+0x1c>
    93fc:	e5901000 	ldr	r1, [r0]
    9400:	e59f2034 	ldr	r2, [pc, #52]	; 943c <dowaitloop+0x20>
    9404:	e1c11002 	bic	r1, r1, r2
    9408:	e59f2030 	ldr	r2, [pc, #48]	; 9440 <dowaitloop+0x24>
    940c:	e1811002 	orr	r1, r1, r2
    9410:	e5801000 	str	r1, [r0]
    9414:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009418 <dowait>:
    9418:	e3a02f4b 	mov	r2, #300	; 0x12c

0000941c <dowaitloop>:
    941c:	e2522001 	subs	r2, r2, #1
    9420:	1afffffd 	bne	941c <dowaitloop>
    9424:	e12fff1e 	bx	lr
    9428:	20200094 	.word	0x20200094
    942c:	20200098 	.word	0x20200098
    9430:	0bc00010 	.word	0x0bc00010
    9434:	20200000 	.word	0x20200000
    9438:	20200008 	.word	0x20200008
    943c:	00e3ffc0 	.word	0x00e3ffc0
    9440:	0061b6c0 	.word	0x0061b6c0

00009444 <main>:
    9444:	e3a0d902 	mov	sp, #32768	; 0x8000
    9448:	ebffffda 	bl	93b8 <EnableJTAG>
    944c:	eb000057 	bl	95b0 <InitUART>
    9450:	e3a0a00a 	mov	sl, #10
    9454:	e59f0134 	ldr	r0, [pc, #308]	; 9590 <haltLoop$+0x4>
    9458:	e3a01017 	mov	r1, #23
    945c:	eb000091 	bl	96a8 <WriteStringUART>

00009460 <nameCHK>:
    9460:	e59f012c 	ldr	r0, [pc, #300]	; 9594 <haltLoop$+0x8>
    9464:	e3a01027 	mov	r1, #39	; 0x27
    9468:	eb00008e 	bl	96a8 <WriteStringUART>
    946c:	e59f0124 	ldr	r0, [pc, #292]	; 9598 <haltLoop$+0xc>
    9470:	e3a01001 	mov	r1, #1
    9474:	eb000096 	bl	96d4 <ReadLineUART>
    9478:	e59f0118 	ldr	r0, [pc, #280]	; 9598 <haltLoop$+0xc>
    947c:	e5d02000 	ldrb	r2, [r0]
    9480:	e2422030 	sub	r2, r2, #48	; 0x30

00009484 <error1>:
    9484:	e3520001 	cmp	r2, #1
    9488:	ba000000 	blt	9490 <errorINVS>
    948c:	ea000003 	b	94a0 <continue>

00009490 <errorINVS>:
    9490:	e59f0104 	ldr	r0, [pc, #260]	; 959c <haltLoop$+0x10>
    9494:	e3a01042 	mov	r1, #66	; 0x42
    9498:	eb000082 	bl	96a8 <WriteStringUART>
    949c:	eaffffef 	b	9460 <nameCHK>

000094a0 <continue>:
    94a0:	e3a04000 	mov	r4, #0
    94a4:	e59fb0f4 	ldr	fp, [pc, #244]	; 95a0 <haltLoop$+0x14>
    94a8:	e3a09000 	mov	r9, #0

000094ac <Loop>:
    94ac:	e1540002 	cmp	r4, r2
    94b0:	aa000032 	bge	9580 <dispOutput>
    94b4:	e3a08000 	mov	r8, #0
    94b8:	e1a0000b 	mov	r0, fp
    94bc:	e3a01024 	mov	r1, #36	; 0x24
    94c0:	eb000078 	bl	96a8 <WriteStringUART>
    94c4:	e59f00cc 	ldr	r0, [pc, #204]	; 9598 <haltLoop$+0xc>
    94c8:	e3a01c01 	mov	r1, #256	; 0x100
    94cc:	eb000080 	bl	96d4 <ReadLineUART>
    94d0:	e59f00c0 	ldr	r0, [pc, #192]	; 9598 <haltLoop$+0xc>
    94d4:	e5d07002 	ldrb	r7, [r0, #2]
    94d8:	e5d06001 	ldrb	r6, [r0, #1]
    94dc:	e5d05000 	ldrb	r5, [r0]
    94e0:	e355003a 	cmp	r5, #58	; 0x3a
    94e4:	aa000019 	bge	9550 <wrongType>
    94e8:	e356003a 	cmp	r6, #58	; 0x3a
    94ec:	aa000017 	bge	9550 <wrongType>
    94f0:	e357003a 	cmp	r7, #58	; 0x3a
    94f4:	aa000015 	bge	9550 <wrongType>
    94f8:	e3550000 	cmp	r5, #0
    94fc:	0a00000d 	beq	9538 <twoDigit>
    9500:	e2455030 	sub	r5, r5, #48	; 0x30
    9504:	e2466030 	sub	r6, r6, #48	; 0x30
    9508:	e2477030 	sub	r7, r7, #48	; 0x30
    950c:	e0888007 	add	r8, r8, r7
    9510:	e006069a 	mul	r6, sl, r6
    9514:	e0888006 	add	r8, r8, r6
    9518:	e005059a 	mul	r5, sl, r5
    951c:	e005059a 	mul	r5, sl, r5
    9520:	e0888005 	add	r8, r8, r5
    9524:	e3580000 	cmp	r8, #0
    9528:	ba00000c 	blt	9560 <errorINVG>
    952c:	e3580064 	cmp	r8, #100	; 0x64
    9530:	ca00000a 	bgt	9560 <errorINVG>
    9534:	ea00000d 	b	9570 <totalSum>

00009538 <twoDigit>:
    9538:	e3560000 	cmp	r6, #0
    953c:	0a000001 	beq	9548 <oneDigit>
    9540:	e0285a96 	mla	r8, r6, sl, r5
    9544:	ea000009 	b	9570 <totalSum>

00009548 <oneDigit>:
    9548:	e0888007 	add	r8, r8, r7
    954c:	ea000007 	b	9570 <totalSum>

00009550 <wrongType>:
    9550:	e59f004c 	ldr	r0, [pc, #76]	; 95a4 <haltLoop$+0x18>
    9554:	e3a01016 	mov	r1, #22
    9558:	eb000052 	bl	96a8 <WriteStringUART>
    955c:	eaffffd2 	b	94ac <Loop>

00009560 <errorINVG>:
    9560:	e59f0040 	ldr	r0, [pc, #64]	; 95a8 <haltLoop$+0x1c>
    9564:	e3a0103e 	mov	r1, #62	; 0x3e
    9568:	eb00004e 	bl	96a8 <WriteStringUART>
    956c:	eaffffce 	b	94ac <Loop>

00009570 <totalSum>:
    9570:	e0899008 	add	r9, r9, r8
    9574:	e28bb024 	add	fp, fp, #36	; 0x24
    9578:	e2844001 	add	r4, r4, #1
    957c:	eaffffca 	b	94ac <Loop>

00009580 <dispOutput>:
    9580:	e59f0024 	ldr	r0, [pc, #36]	; 95ac <haltLoop$+0x20>
    9584:	e3a0100c 	mov	r1, #12
    9588:	eb000046 	bl	96a8 <WriteStringUART>

0000958c <haltLoop$>:
    958c:	eafffffe 	b	958c <haltLoop$>
    9590:	00009080 	.word	0x00009080
    9594:	00009097 	.word	0x00009097
    9598:	000092b6 	.word	0x000092b6
    959c:	00009256 	.word	0x00009256
    95a0:	000090be 	.word	0x000090be
    95a4:	00009202 	.word	0x00009202
    95a8:	00009218 	.word	0x00009218
    95ac:	00009298 	.word	0x00009298

000095b0 <InitUART>:
    95b0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    95b4:	e59f0178 	ldr	r0, [pc, #376]	; 9734 <WaitForCycles+0x10>
    95b8:	e3a01001 	mov	r1, #1
    95bc:	e5801000 	str	r1, [r0]
    95c0:	e59f0170 	ldr	r0, [pc, #368]	; 9738 <WaitForCycles+0x14>
    95c4:	e0211001 	eor	r1, r1, r1
    95c8:	e5801000 	str	r1, [r0]
    95cc:	e59f0168 	ldr	r0, [pc, #360]	; 973c <WaitForCycles+0x18>
    95d0:	e0211001 	eor	r1, r1, r1
    95d4:	e5801000 	str	r1, [r0]
    95d8:	e59f0160 	ldr	r0, [pc, #352]	; 9740 <WaitForCycles+0x1c>
    95dc:	e3a01003 	mov	r1, #3
    95e0:	e5801000 	str	r1, [r0]
    95e4:	e59f0158 	ldr	r0, [pc, #344]	; 9744 <WaitForCycles+0x20>
    95e8:	e0211001 	eor	r1, r1, r1
    95ec:	e5801000 	str	r1, [r0]
    95f0:	e59f0140 	ldr	r0, [pc, #320]	; 9738 <WaitForCycles+0x14>
    95f4:	e0211001 	eor	r1, r1, r1
    95f8:	e5801000 	str	r1, [r0]
    95fc:	e59f0144 	ldr	r0, [pc, #324]	; 9748 <WaitForCycles+0x24>
    9600:	e3a010c6 	mov	r1, #198	; 0xc6
    9604:	e5801000 	str	r1, [r0]
    9608:	e59f013c 	ldr	r0, [pc, #316]	; 974c <WaitForCycles+0x28>
    960c:	e59f113c 	ldr	r1, [pc, #316]	; 9750 <WaitForCycles+0x2c>
    9610:	e5801000 	str	r1, [r0]
    9614:	e3a0000e 	mov	r0, #14
    9618:	e3a01002 	mov	r1, #2
    961c:	eb000052 	bl	976c <SetGpioFunction>
    9620:	e3a0000f 	mov	r0, #15
    9624:	e3a01002 	mov	r1, #2
    9628:	eb00004f 	bl	976c <SetGpioFunction>
    962c:	e59f0120 	ldr	r0, [pc, #288]	; 9754 <WaitForCycles+0x30>
    9630:	e0211001 	eor	r1, r1, r1
    9634:	e5801000 	str	r1, [r0]
    9638:	e3a00096 	mov	r0, #150	; 0x96
    963c:	eb000038 	bl	9724 <WaitForCycles>
    9640:	e59f0110 	ldr	r0, [pc, #272]	; 9758 <WaitForCycles+0x34>
    9644:	e3a01903 	mov	r1, #49152	; 0xc000
    9648:	e5801000 	str	r1, [r0]
    964c:	e3a00096 	mov	r0, #150	; 0x96
    9650:	eb000033 	bl	9724 <WaitForCycles>
    9654:	e59f00fc 	ldr	r0, [pc, #252]	; 9758 <WaitForCycles+0x34>
    9658:	e0211001 	eor	r1, r1, r1
    965c:	e5801000 	str	r1, [r0]
    9660:	e59f00d4 	ldr	r0, [pc, #212]	; 973c <WaitForCycles+0x18>
    9664:	e3a01003 	mov	r1, #3
    9668:	e5801000 	str	r1, [r0]
    966c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009670 <PutCharUART>:
    9670:	e59f20e4 	ldr	r2, [pc, #228]	; 975c <WaitForCycles+0x38>

00009674 <putWaitLoop$>:
    9674:	e5921000 	ldr	r1, [r2]
    9678:	e3110020 	tst	r1, #32
    967c:	0afffffc 	beq	9674 <putWaitLoop$>
    9680:	e59f20d8 	ldr	r2, [pc, #216]	; 9760 <WaitForCycles+0x3c>
    9684:	e5820000 	str	r0, [r2]
    9688:	e1a0f00e 	mov	pc, lr

0000968c <GetCharUART>:
    968c:	e59f20c8 	ldr	r2, [pc, #200]	; 975c <WaitForCycles+0x38>

00009690 <getWaitLoop$>:
    9690:	e5921000 	ldr	r1, [r2]
    9694:	e3110001 	tst	r1, #1
    9698:	0afffffc 	beq	9690 <getWaitLoop$>
    969c:	e59f20bc 	ldr	r2, [pc, #188]	; 9760 <WaitForCycles+0x3c>
    96a0:	e5920000 	ldr	r0, [r2]
    96a4:	e1a0f00e 	mov	pc, lr

000096a8 <WriteStringUART>:
    96a8:	e92d4030 	push	{r4, r5, lr}
    96ac:	e1a04000 	mov	r4, r0
    96b0:	e1a05001 	mov	r5, r1

000096b4 <writeLoop$>:
    96b4:	e3550000 	cmp	r5, #0
    96b8:	da000004 	ble	96d0 <writeLoopEnd$>
    96bc:	e5940000 	ldr	r0, [r4]
    96c0:	ebffffea 	bl	9670 <PutCharUART>
    96c4:	e2844001 	add	r4, r4, #1
    96c8:	e2455001 	sub	r5, r5, #1
    96cc:	eafffff8 	b	96b4 <writeLoop$>

000096d0 <writeLoopEnd$>:
    96d0:	e8bd8030 	pop	{r4, r5, pc}

000096d4 <ReadLineUART>:
    96d4:	e92d4070 	push	{r4, r5, r6, lr}
    96d8:	e1a04000 	mov	r4, r0
    96dc:	e1a05001 	mov	r5, r1
    96e0:	e3a06000 	mov	r6, #0

000096e4 <readLoop$>:
    96e4:	e1360005 	teq	r6, r5
    96e8:	0a00000b 	beq	971c <readLoopEnd$>
    96ec:	ebffffe6 	bl	968c <GetCharUART>
    96f0:	ebffffde 	bl	9670 <PutCharUART>
    96f4:	e5c40000 	strb	r0, [r4]
    96f8:	e2866001 	add	r6, r6, #1
    96fc:	e2844001 	add	r4, r4, #1
    9700:	e330000d 	teq	r0, #13
    9704:	1afffff6 	bne	96e4 <readLoop$>
    9708:	e3a0000a 	mov	r0, #10
    970c:	ebffffd7 	bl	9670 <PutCharUART>
    9710:	e2444001 	sub	r4, r4, #1
    9714:	e3a00000 	mov	r0, #0
    9718:	e5c40000 	strb	r0, [r4]

0000971c <readLoopEnd$>:
    971c:	e2460001 	sub	r0, r6, #1
    9720:	e8bd8070 	pop	{r4, r5, r6, pc}

00009724 <WaitForCycles>:
    9724:	e2400001 	sub	r0, r0, #1
    9728:	e3500000 	cmp	r0, #0
    972c:	aafffffc 	bge	9724 <WaitForCycles>
    9730:	e1a0f00e 	mov	pc, lr
    9734:	20215004 	.word	0x20215004
    9738:	20215044 	.word	0x20215044
    973c:	20215060 	.word	0x20215060
    9740:	2021504c 	.word	0x2021504c
    9744:	20215050 	.word	0x20215050
    9748:	20215048 	.word	0x20215048
    974c:	20215068 	.word	0x20215068
    9750:	0000010e 	.word	0x0000010e
    9754:	20200094 	.word	0x20200094
    9758:	20200098 	.word	0x20200098
    975c:	20215054 	.word	0x20215054
    9760:	20215040 	.word	0x20215040

00009764 <GetGpioAddress>:
    9764:	e59f00cc 	ldr	r0, [pc, #204]	; 9838 <GetGpio+0x44>
    9768:	e1a0f00e 	mov	pc, lr

0000976c <SetGpioFunction>:
    976c:	e3500035 	cmp	r0, #53	; 0x35
    9770:	93510007 	cmpls	r1, #7
    9774:	81a0f00e 	movhi	pc, lr
    9778:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    977c:	e1a02000 	mov	r2, r0
    9780:	ebfffff7 	bl	9764 <GetGpioAddress>

00009784 <functionLoop$>:
    9784:	e3520009 	cmp	r2, #9
    9788:	8242200a 	subhi	r2, r2, #10
    978c:	82800004 	addhi	r0, r0, #4
    9790:	8afffffb 	bhi	9784 <functionLoop$>
    9794:	e0822082 	add	r2, r2, r2, lsl #1
    9798:	e1a01211 	lsl	r1, r1, r2
    979c:	e3a03007 	mov	r3, #7
    97a0:	e1a03213 	lsl	r3, r3, r2
    97a4:	e5902000 	ldr	r2, [r0]
    97a8:	e1c22003 	bic	r2, r2, r3
    97ac:	e1811002 	orr	r1, r1, r2
    97b0:	e5801000 	str	r1, [r0]
    97b4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000097b8 <SetGpio>:
    97b8:	e3500035 	cmp	r0, #53	; 0x35
    97bc:	81a0f00e 	movhi	pc, lr
    97c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    97c4:	e1a02000 	mov	r2, r0
    97c8:	ebffffe5 	bl	9764 <GetGpioAddress>
    97cc:	e1a032a2 	lsr	r3, r2, #5
    97d0:	e1a03103 	lsl	r3, r3, #2
    97d4:	e0800003 	add	r0, r0, r3
    97d8:	e202201f 	and	r2, r2, #31
    97dc:	e3a03001 	mov	r3, #1
    97e0:	e1a03213 	lsl	r3, r3, r2
    97e4:	e3310000 	teq	r1, #0
    97e8:	05803028 	streq	r3, [r0, #40]	; 0x28
    97ec:	1580301c 	strne	r3, [r0, #28]
    97f0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000097f4 <GetGpio>:
    97f4:	e3500035 	cmp	r0, #53	; 0x35
    97f8:	81a0f00e 	movhi	pc, lr
    97fc:	e92d4010 	push	{r4, lr}
    9800:	e1a04000 	mov	r4, r0
    9804:	ebffffd6 	bl	9764 <GetGpioAddress>
    9808:	e1a032a4 	lsr	r3, r4, #5
    980c:	e1a03103 	lsl	r3, r3, #2
    9810:	e0800003 	add	r0, r0, r3
    9814:	e204401f 	and	r4, r4, #31
    9818:	e3a03001 	mov	r3, #1
    981c:	e1a03413 	lsl	r3, r3, r4
    9820:	e5904034 	ldr	r4, [r0, #52]	; 0x34
    9824:	e0044003 	and	r4, r4, r3
    9828:	e3340000 	teq	r4, #0
    982c:	03a00000 	moveq	r0, #0
    9830:	13a00001 	movne	r0, #1
    9834:	e8bd8010 	pop	{r4, pc}
    9838:	20200000 	.word	0x20200000
