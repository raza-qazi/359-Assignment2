
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea00050f 	b	9444 <main>

Disassembly of section .text:

000093b8 <EnableJTAG>:
    93b8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    93bc:	e59f0064 	ldr	r0, [pc, #100]	; 9428 <dowaitloop+0xc>
    93c0:	e0211001 	eor	r1, r1, r1
    93c4:	e5801000 	str	r1, [r0]
    93c8:	eb000012 	bl	9418 <dowait>
    93cc:	e59f0058 	ldr	r0, [pc, #88]	; 942c <dowaitloop+0x10>
    93d0:	e59f1058 	ldr	r1, [pc, #88]	; 9430 <dowaitloop+0x14>
    93d4:	e5801000 	str	r1, [r0]
    93d8:	eb00000e 	bl	9418 <dowait>
    93dc:	e0211001 	eor	r1, r1, r1
    93e0:	e5801000 	str	r1, [r0]
    93e4:	e59f0048 	ldr	r0, [pc, #72]	; 9434 <dowaitloop+0x18>
    93e8:	e5901000 	ldr	r1, [r0]
    93ec:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    93f0:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    93f4:	e5801000 	str	r1, [r0]
    93f8:	e59f0038 	ldr	r0, [pc, #56]	; 9438 <dowaitloop+0x1c>
    93fc:	e5901000 	ldr	r1, [r0]
    9400:	e59f2034 	ldr	r2, [pc, #52]	; 943c <dowaitloop+0x20>
    9404:	e1c11002 	bic	r1, r1, r2
    9408:	e59f2030 	ldr	r2, [pc, #48]	; 9440 <dowaitloop+0x24>
    940c:	e1811002 	orr	r1, r1, r2
    9410:	e5801000 	str	r1, [r0]
    9414:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009418 <dowait>:
    9418:	e3a02f4b 	mov	r2, #300	; 0x12c

0000941c <dowaitloop>:
    941c:	e2522001 	subs	r2, r2, #1
    9420:	1afffffd 	bne	941c <dowaitloop>
    9424:	e12fff1e 	bx	lr
    9428:	20200094 	.word	0x20200094
    942c:	20200098 	.word	0x20200098
    9430:	0bc00010 	.word	0x0bc00010
    9434:	20200000 	.word	0x20200000
    9438:	20200008 	.word	0x20200008
    943c:	00e3ffc0 	.word	0x00e3ffc0
    9440:	0061b6c0 	.word	0x0061b6c0

00009444 <main>:
    9444:	e3a0d902 	mov	sp, #32768	; 0x8000
    9448:	ebffffda 	bl	93b8 <EnableJTAG>
    944c:	eb000042 	bl	955c <InitUART>
    9450:	e3a0a00a 	mov	sl, #10
    9454:	e59f00e4 	ldr	r0, [pc, #228]	; 9540 <haltLoop$+0x4>
    9458:	e3a01017 	mov	r1, #23
    945c:	eb00007c 	bl	9654 <WriteStringUART>

00009460 <nameCHK>:
    9460:	e59f00dc 	ldr	r0, [pc, #220]	; 9544 <haltLoop$+0x8>
    9464:	e3a01026 	mov	r1, #38	; 0x26
    9468:	eb000079 	bl	9654 <WriteStringUART>
    946c:	e59f00d4 	ldr	r0, [pc, #212]	; 9548 <haltLoop$+0xc>
    9470:	e3a01001 	mov	r1, #1
    9474:	eb000081 	bl	9680 <ReadLineUART>
    9478:	e59f00c8 	ldr	r0, [pc, #200]	; 9548 <haltLoop$+0xc>
    947c:	e5d02000 	ldrb	r2, [r0]
    9480:	e2422030 	sub	r2, r2, #48	; 0x30

00009484 <error1>:
    9484:	e3520001 	cmp	r2, #1
    9488:	ba000000 	blt	9490 <errorINVS>
    948c:	ea000003 	b	94a0 <continue>

00009490 <errorINVS>:
    9490:	e59f00b4 	ldr	r0, [pc, #180]	; 954c <haltLoop$+0x10>
    9494:	e3a01042 	mov	r1, #66	; 0x42
    9498:	eb00006d 	bl	9654 <WriteStringUART>
    949c:	eaffffef 	b	9460 <nameCHK>

000094a0 <continue>:
    94a0:	e3a04000 	mov	r4, #0
    94a4:	e59fb0a4 	ldr	fp, [pc, #164]	; 9550 <haltLoop$+0x14>

000094a8 <Grades>:
    94a8:	e1540002 	cmp	r4, r2
    94ac:	aa00001f 	bge	9530 <dispOutput>
    94b0:	e1a0000b 	mov	r0, fp
    94b4:	e3a01024 	mov	r1, #36	; 0x24
    94b8:	eb000065 	bl	9654 <WriteStringUART>
    94bc:	e59f0084 	ldr	r0, [pc, #132]	; 9548 <haltLoop$+0xc>
    94c0:	e3a01c01 	mov	r1, #256	; 0x100
    94c4:	eb00006d 	bl	9680 <ReadLineUART>

000094c8 <test>:
    94c8:	e59f0078 	ldr	r0, [pc, #120]	; 9548 <haltLoop$+0xc>
    94cc:	e5d07002 	ldrb	r7, [r0, #2]
    94d0:	e5d06001 	ldrb	r6, [r0, #1]
    94d4:	e5d05000 	ldrb	r5, [r0]
    94d8:	e3570000 	cmp	r7, #0
    94dc:	1a000007 	bne	9500 <error2>
    94e0:	e3560000 	cmp	r6, #0
    94e4:	1a000005 	bne	9500 <error2>
    94e8:	e59f0058 	ldr	r0, [pc, #88]	; 9548 <haltLoop$+0xc>
    94ec:	e5d05001 	ldrb	r5, [r0, #1]
    94f0:	e2455030 	sub	r5, r5, #48	; 0x30
    94f4:	e5d06000 	ldrb	r6, [r0]
    94f8:	e2466030 	sub	r6, r6, #48	; 0x30
    94fc:	e0275a96 	mla	r7, r6, sl, r5

00009500 <error2>:
    9500:	e3570001 	cmp	r7, #1
    9504:	ba000002 	blt	9514 <errorINVG>
    9508:	e3570064 	cmp	r7, #100	; 0x64
    950c:	ca000000 	bgt	9514 <errorINVG>
    9510:	ea000003 	b	9524 <continue2>

00009514 <errorINVG>:
    9514:	e59f0038 	ldr	r0, [pc, #56]	; 9554 <haltLoop$+0x18>
    9518:	e3a0103e 	mov	r1, #62	; 0x3e
    951c:	eb00004c 	bl	9654 <WriteStringUART>
    9520:	eaffffe0 	b	94a8 <Grades>

00009524 <continue2>:
    9524:	e28bb024 	add	fp, fp, #36	; 0x24
    9528:	e2844001 	add	r4, r4, #1
    952c:	eaffffdd 	b	94a8 <Grades>

00009530 <dispOutput>:
    9530:	e59f0020 	ldr	r0, [pc, #32]	; 9558 <haltLoop$+0x1c>
    9534:	e3a0100c 	mov	r1, #12
    9538:	eb000045 	bl	9654 <WriteStringUART>

0000953c <haltLoop$>:
    953c:	eafffffe 	b	953c <haltLoop$>
    9540:	00009080 	.word	0x00009080
    9544:	00009097 	.word	0x00009097
    9548:	000092b5 	.word	0x000092b5
    954c:	00009255 	.word	0x00009255
    9550:	000090bd 	.word	0x000090bd
    9554:	00009217 	.word	0x00009217
    9558:	00009297 	.word	0x00009297

0000955c <InitUART>:
    955c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9560:	e59f0178 	ldr	r0, [pc, #376]	; 96e0 <WaitForCycles+0x10>
    9564:	e3a01001 	mov	r1, #1
    9568:	e5801000 	str	r1, [r0]
    956c:	e59f0170 	ldr	r0, [pc, #368]	; 96e4 <WaitForCycles+0x14>
    9570:	e0211001 	eor	r1, r1, r1
    9574:	e5801000 	str	r1, [r0]
    9578:	e59f0168 	ldr	r0, [pc, #360]	; 96e8 <WaitForCycles+0x18>
    957c:	e0211001 	eor	r1, r1, r1
    9580:	e5801000 	str	r1, [r0]
    9584:	e59f0160 	ldr	r0, [pc, #352]	; 96ec <WaitForCycles+0x1c>
    9588:	e3a01003 	mov	r1, #3
    958c:	e5801000 	str	r1, [r0]
    9590:	e59f0158 	ldr	r0, [pc, #344]	; 96f0 <WaitForCycles+0x20>
    9594:	e0211001 	eor	r1, r1, r1
    9598:	e5801000 	str	r1, [r0]
    959c:	e59f0140 	ldr	r0, [pc, #320]	; 96e4 <WaitForCycles+0x14>
    95a0:	e0211001 	eor	r1, r1, r1
    95a4:	e5801000 	str	r1, [r0]
    95a8:	e59f0144 	ldr	r0, [pc, #324]	; 96f4 <WaitForCycles+0x24>
    95ac:	e3a010c6 	mov	r1, #198	; 0xc6
    95b0:	e5801000 	str	r1, [r0]
    95b4:	e59f013c 	ldr	r0, [pc, #316]	; 96f8 <WaitForCycles+0x28>
    95b8:	e59f113c 	ldr	r1, [pc, #316]	; 96fc <WaitForCycles+0x2c>
    95bc:	e5801000 	str	r1, [r0]
    95c0:	e3a0000e 	mov	r0, #14
    95c4:	e3a01002 	mov	r1, #2
    95c8:	eb000052 	bl	9718 <SetGpioFunction>
    95cc:	e3a0000f 	mov	r0, #15
    95d0:	e3a01002 	mov	r1, #2
    95d4:	eb00004f 	bl	9718 <SetGpioFunction>
    95d8:	e59f0120 	ldr	r0, [pc, #288]	; 9700 <WaitForCycles+0x30>
    95dc:	e0211001 	eor	r1, r1, r1
    95e0:	e5801000 	str	r1, [r0]
    95e4:	e3a00096 	mov	r0, #150	; 0x96
    95e8:	eb000038 	bl	96d0 <WaitForCycles>
    95ec:	e59f0110 	ldr	r0, [pc, #272]	; 9704 <WaitForCycles+0x34>
    95f0:	e3a01903 	mov	r1, #49152	; 0xc000
    95f4:	e5801000 	str	r1, [r0]
    95f8:	e3a00096 	mov	r0, #150	; 0x96
    95fc:	eb000033 	bl	96d0 <WaitForCycles>
    9600:	e59f00fc 	ldr	r0, [pc, #252]	; 9704 <WaitForCycles+0x34>
    9604:	e0211001 	eor	r1, r1, r1
    9608:	e5801000 	str	r1, [r0]
    960c:	e59f00d4 	ldr	r0, [pc, #212]	; 96e8 <WaitForCycles+0x18>
    9610:	e3a01003 	mov	r1, #3
    9614:	e5801000 	str	r1, [r0]
    9618:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000961c <PutCharUART>:
    961c:	e59f20e4 	ldr	r2, [pc, #228]	; 9708 <WaitForCycles+0x38>

00009620 <putWaitLoop$>:
    9620:	e5921000 	ldr	r1, [r2]
    9624:	e3110020 	tst	r1, #32
    9628:	0afffffc 	beq	9620 <putWaitLoop$>
    962c:	e59f20d8 	ldr	r2, [pc, #216]	; 970c <WaitForCycles+0x3c>
    9630:	e5820000 	str	r0, [r2]
    9634:	e1a0f00e 	mov	pc, lr

00009638 <GetCharUART>:
    9638:	e59f20c8 	ldr	r2, [pc, #200]	; 9708 <WaitForCycles+0x38>

0000963c <getWaitLoop$>:
    963c:	e5921000 	ldr	r1, [r2]
    9640:	e3110001 	tst	r1, #1
    9644:	0afffffc 	beq	963c <getWaitLoop$>
    9648:	e59f20bc 	ldr	r2, [pc, #188]	; 970c <WaitForCycles+0x3c>
    964c:	e5920000 	ldr	r0, [r2]
    9650:	e1a0f00e 	mov	pc, lr

00009654 <WriteStringUART>:
    9654:	e92d4030 	push	{r4, r5, lr}
    9658:	e1a04000 	mov	r4, r0
    965c:	e1a05001 	mov	r5, r1

00009660 <writeLoop$>:
    9660:	e3550000 	cmp	r5, #0
    9664:	da000004 	ble	967c <writeLoopEnd$>
    9668:	e5940000 	ldr	r0, [r4]
    966c:	ebffffea 	bl	961c <PutCharUART>
    9670:	e2844001 	add	r4, r4, #1
    9674:	e2455001 	sub	r5, r5, #1
    9678:	eafffff8 	b	9660 <writeLoop$>

0000967c <writeLoopEnd$>:
    967c:	e8bd8030 	pop	{r4, r5, pc}

00009680 <ReadLineUART>:
    9680:	e92d4070 	push	{r4, r5, r6, lr}
    9684:	e1a04000 	mov	r4, r0
    9688:	e1a05001 	mov	r5, r1
    968c:	e3a06000 	mov	r6, #0

00009690 <readLoop$>:
    9690:	e1360005 	teq	r6, r5
    9694:	0a00000b 	beq	96c8 <readLoopEnd$>
    9698:	ebffffe6 	bl	9638 <GetCharUART>
    969c:	ebffffde 	bl	961c <PutCharUART>
    96a0:	e5c40000 	strb	r0, [r4]
    96a4:	e2866001 	add	r6, r6, #1
    96a8:	e2844001 	add	r4, r4, #1
    96ac:	e330000d 	teq	r0, #13
    96b0:	1afffff6 	bne	9690 <readLoop$>
    96b4:	e3a0000a 	mov	r0, #10
    96b8:	ebffffd7 	bl	961c <PutCharUART>
    96bc:	e2444001 	sub	r4, r4, #1
    96c0:	e3a00000 	mov	r0, #0
    96c4:	e5c40000 	strb	r0, [r4]

000096c8 <readLoopEnd$>:
    96c8:	e2460001 	sub	r0, r6, #1
    96cc:	e8bd8070 	pop	{r4, r5, r6, pc}

000096d0 <WaitForCycles>:
    96d0:	e2400001 	sub	r0, r0, #1
    96d4:	e3500000 	cmp	r0, #0
    96d8:	aafffffc 	bge	96d0 <WaitForCycles>
    96dc:	e1a0f00e 	mov	pc, lr
    96e0:	20215004 	.word	0x20215004
    96e4:	20215044 	.word	0x20215044
    96e8:	20215060 	.word	0x20215060
    96ec:	2021504c 	.word	0x2021504c
    96f0:	20215050 	.word	0x20215050
    96f4:	20215048 	.word	0x20215048
    96f8:	20215068 	.word	0x20215068
    96fc:	0000010e 	.word	0x0000010e
    9700:	20200094 	.word	0x20200094
    9704:	20200098 	.word	0x20200098
    9708:	20215054 	.word	0x20215054
    970c:	20215040 	.word	0x20215040

00009710 <GetGpioAddress>:
    9710:	e59f00cc 	ldr	r0, [pc, #204]	; 97e4 <GetGpio+0x44>
    9714:	e1a0f00e 	mov	pc, lr

00009718 <SetGpioFunction>:
    9718:	e3500035 	cmp	r0, #53	; 0x35
    971c:	93510007 	cmpls	r1, #7
    9720:	81a0f00e 	movhi	pc, lr
    9724:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9728:	e1a02000 	mov	r2, r0
    972c:	ebfffff7 	bl	9710 <GetGpioAddress>

00009730 <functionLoop$>:
    9730:	e3520009 	cmp	r2, #9
    9734:	8242200a 	subhi	r2, r2, #10
    9738:	82800004 	addhi	r0, r0, #4
    973c:	8afffffb 	bhi	9730 <functionLoop$>
    9740:	e0822082 	add	r2, r2, r2, lsl #1
    9744:	e1a01211 	lsl	r1, r1, r2
    9748:	e3a03007 	mov	r3, #7
    974c:	e1a03213 	lsl	r3, r3, r2
    9750:	e5902000 	ldr	r2, [r0]
    9754:	e1c22003 	bic	r2, r2, r3
    9758:	e1811002 	orr	r1, r1, r2
    975c:	e5801000 	str	r1, [r0]
    9760:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009764 <SetGpio>:
    9764:	e3500035 	cmp	r0, #53	; 0x35
    9768:	81a0f00e 	movhi	pc, lr
    976c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9770:	e1a02000 	mov	r2, r0
    9774:	ebffffe5 	bl	9710 <GetGpioAddress>
    9778:	e1a032a2 	lsr	r3, r2, #5
    977c:	e1a03103 	lsl	r3, r3, #2
    9780:	e0800003 	add	r0, r0, r3
    9784:	e202201f 	and	r2, r2, #31
    9788:	e3a03001 	mov	r3, #1
    978c:	e1a03213 	lsl	r3, r3, r2
    9790:	e3310000 	teq	r1, #0
    9794:	05803028 	streq	r3, [r0, #40]	; 0x28
    9798:	1580301c 	strne	r3, [r0, #28]
    979c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000097a0 <GetGpio>:
    97a0:	e3500035 	cmp	r0, #53	; 0x35
    97a4:	81a0f00e 	movhi	pc, lr
    97a8:	e92d4010 	push	{r4, lr}
    97ac:	e1a04000 	mov	r4, r0
    97b0:	ebffffd6 	bl	9710 <GetGpioAddress>
    97b4:	e1a032a4 	lsr	r3, r4, #5
    97b8:	e1a03103 	lsl	r3, r3, #2
    97bc:	e0800003 	add	r0, r0, r3
    97c0:	e204401f 	and	r4, r4, #31
    97c4:	e3a03001 	mov	r3, #1
    97c8:	e1a03413 	lsl	r3, r3, r4
    97cc:	e5904034 	ldr	r4, [r0, #52]	; 0x34
    97d0:	e0044003 	and	r4, r4, r3
    97d4:	e3340000 	teq	r4, #0
    97d8:	03a00000 	moveq	r0, #0
    97dc:	13a00001 	movne	r0, #1
    97e0:	e8bd8010 	pop	{r4, pc}
    97e4:	20200000 	.word	0x20200000
