
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea00050a 	b	9430 <main>

Disassembly of section .text:

000093a4 <EnableJTAG>:
    93a4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    93a8:	e59f0064 	ldr	r0, [pc, #100]	; 9414 <dowaitloop+0xc>
    93ac:	e0211001 	eor	r1, r1, r1
    93b0:	e5801000 	str	r1, [r0]
    93b4:	eb000012 	bl	9404 <dowait>
    93b8:	e59f0058 	ldr	r0, [pc, #88]	; 9418 <dowaitloop+0x10>
    93bc:	e59f1058 	ldr	r1, [pc, #88]	; 941c <dowaitloop+0x14>
    93c0:	e5801000 	str	r1, [r0]
    93c4:	eb00000e 	bl	9404 <dowait>
    93c8:	e0211001 	eor	r1, r1, r1
    93cc:	e5801000 	str	r1, [r0]
    93d0:	e59f0048 	ldr	r0, [pc, #72]	; 9420 <dowaitloop+0x18>
    93d4:	e5901000 	ldr	r1, [r0]
    93d8:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    93dc:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    93e0:	e5801000 	str	r1, [r0]
    93e4:	e59f0038 	ldr	r0, [pc, #56]	; 9424 <dowaitloop+0x1c>
    93e8:	e5901000 	ldr	r1, [r0]
    93ec:	e59f2034 	ldr	r2, [pc, #52]	; 9428 <dowaitloop+0x20>
    93f0:	e1c11002 	bic	r1, r1, r2
    93f4:	e59f2030 	ldr	r2, [pc, #48]	; 942c <dowaitloop+0x24>
    93f8:	e1811002 	orr	r1, r1, r2
    93fc:	e5801000 	str	r1, [r0]
    9400:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009404 <dowait>:
    9404:	e3a02f4b 	mov	r2, #300	; 0x12c

00009408 <dowaitloop>:
    9408:	e2522001 	subs	r2, r2, #1
    940c:	1afffffd 	bne	9408 <dowaitloop>
    9410:	e12fff1e 	bx	lr
    9414:	20200094 	.word	0x20200094
    9418:	20200098 	.word	0x20200098
    941c:	0bc00010 	.word	0x0bc00010
    9420:	20200000 	.word	0x20200000
    9424:	20200008 	.word	0x20200008
    9428:	00e3ffc0 	.word	0x00e3ffc0
    942c:	0061b6c0 	.word	0x0061b6c0

00009430 <main>:
    9430:	e3a0d902 	mov	sp, #32768	; 0x8000
    9434:	ebffffda 	bl	93a4 <EnableJTAG>
    9438:	eb00001d 	bl	94b4 <InitUART>
    943c:	e59f005c 	ldr	r0, [pc, #92]	; 94a0 <haltLoop$+0x4>
    9440:	e3a01017 	mov	r1, #23
    9444:	eb000058 	bl	95ac <WriteStringUART>

00009448 <do>:
    9448:	e59f0054 	ldr	r0, [pc, #84]	; 94a4 <haltLoop$+0x8>
    944c:	e3a01026 	mov	r1, #38	; 0x26
    9450:	eb000055 	bl	95ac <WriteStringUART>
    9454:	e59f004c 	ldr	r0, [pc, #76]	; 94a8 <haltLoop$+0xc>
    9458:	e3a01002 	mov	r1, #2
    945c:	eb00005d 	bl	95d8 <ReadLineUART>
    9460:	e59f0040 	ldr	r0, [pc, #64]	; 94a8 <haltLoop$+0xc>
    9464:	e5d02000 	ldrb	r2, [r0]
    9468:	e2422030 	sub	r2, r2, #48	; 0x30

0000946c <test>:
    946c:	e3520001 	cmp	r2, #1
    9470:	ba000002 	blt	9480 <error>
    9474:	e3520009 	cmp	r2, #9
    9478:	ca000000 	bgt	9480 <error>
    947c:	ea000003 	b	9490 <cont>

00009480 <error>:
    9480:	e59f0024 	ldr	r0, [pc, #36]	; 94ac <haltLoop$+0x10>
    9484:	e3a01042 	mov	r1, #66	; 0x42
    9488:	eb000047 	bl	95ac <WriteStringUART>
    948c:	eaffffed 	b	9448 <do>

00009490 <cont>:
    9490:	e59f0018 	ldr	r0, [pc, #24]	; 94b0 <haltLoop$+0x14>
    9494:	e3a0100c 	mov	r1, #12
    9498:	eb000043 	bl	95ac <WriteStringUART>

0000949c <haltLoop$>:
    949c:	eafffffe 	b	949c <haltLoop$>
    94a0:	00009080 	.word	0x00009080
    94a4:	00009097 	.word	0x00009097
    94a8:	000092a3 	.word	0x000092a3
    94ac:	00009243 	.word	0x00009243
    94b0:	00009285 	.word	0x00009285

000094b4 <InitUART>:
    94b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    94b8:	e59f0178 	ldr	r0, [pc, #376]	; 9638 <WaitForCycles+0x10>
    94bc:	e3a01001 	mov	r1, #1
    94c0:	e5801000 	str	r1, [r0]
    94c4:	e59f0170 	ldr	r0, [pc, #368]	; 963c <WaitForCycles+0x14>
    94c8:	e0211001 	eor	r1, r1, r1
    94cc:	e5801000 	str	r1, [r0]
    94d0:	e59f0168 	ldr	r0, [pc, #360]	; 9640 <WaitForCycles+0x18>
    94d4:	e0211001 	eor	r1, r1, r1
    94d8:	e5801000 	str	r1, [r0]
    94dc:	e59f0160 	ldr	r0, [pc, #352]	; 9644 <WaitForCycles+0x1c>
    94e0:	e3a01003 	mov	r1, #3
    94e4:	e5801000 	str	r1, [r0]
    94e8:	e59f0158 	ldr	r0, [pc, #344]	; 9648 <WaitForCycles+0x20>
    94ec:	e0211001 	eor	r1, r1, r1
    94f0:	e5801000 	str	r1, [r0]
    94f4:	e59f0140 	ldr	r0, [pc, #320]	; 963c <WaitForCycles+0x14>
    94f8:	e0211001 	eor	r1, r1, r1
    94fc:	e5801000 	str	r1, [r0]
    9500:	e59f0144 	ldr	r0, [pc, #324]	; 964c <WaitForCycles+0x24>
    9504:	e3a010c6 	mov	r1, #198	; 0xc6
    9508:	e5801000 	str	r1, [r0]
    950c:	e59f013c 	ldr	r0, [pc, #316]	; 9650 <WaitForCycles+0x28>
    9510:	e59f113c 	ldr	r1, [pc, #316]	; 9654 <WaitForCycles+0x2c>
    9514:	e5801000 	str	r1, [r0]
    9518:	e3a0000e 	mov	r0, #14
    951c:	e3a01002 	mov	r1, #2
    9520:	eb000052 	bl	9670 <SetGpioFunction>
    9524:	e3a0000f 	mov	r0, #15
    9528:	e3a01002 	mov	r1, #2
    952c:	eb00004f 	bl	9670 <SetGpioFunction>
    9530:	e59f0120 	ldr	r0, [pc, #288]	; 9658 <WaitForCycles+0x30>
    9534:	e0211001 	eor	r1, r1, r1
    9538:	e5801000 	str	r1, [r0]
    953c:	e3a00096 	mov	r0, #150	; 0x96
    9540:	eb000038 	bl	9628 <WaitForCycles>
    9544:	e59f0110 	ldr	r0, [pc, #272]	; 965c <WaitForCycles+0x34>
    9548:	e3a01903 	mov	r1, #49152	; 0xc000
    954c:	e5801000 	str	r1, [r0]
    9550:	e3a00096 	mov	r0, #150	; 0x96
    9554:	eb000033 	bl	9628 <WaitForCycles>
    9558:	e59f00fc 	ldr	r0, [pc, #252]	; 965c <WaitForCycles+0x34>
    955c:	e0211001 	eor	r1, r1, r1
    9560:	e5801000 	str	r1, [r0]
    9564:	e59f00d4 	ldr	r0, [pc, #212]	; 9640 <WaitForCycles+0x18>
    9568:	e3a01003 	mov	r1, #3
    956c:	e5801000 	str	r1, [r0]
    9570:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009574 <PutCharUART>:
    9574:	e59f20e4 	ldr	r2, [pc, #228]	; 9660 <WaitForCycles+0x38>

00009578 <putWaitLoop$>:
    9578:	e5921000 	ldr	r1, [r2]
    957c:	e3110020 	tst	r1, #32
    9580:	0afffffc 	beq	9578 <putWaitLoop$>
    9584:	e59f20d8 	ldr	r2, [pc, #216]	; 9664 <WaitForCycles+0x3c>
    9588:	e5820000 	str	r0, [r2]
    958c:	e1a0f00e 	mov	pc, lr

00009590 <GetCharUART>:
    9590:	e59f20c8 	ldr	r2, [pc, #200]	; 9660 <WaitForCycles+0x38>

00009594 <getWaitLoop$>:
    9594:	e5921000 	ldr	r1, [r2]
    9598:	e3110001 	tst	r1, #1
    959c:	0afffffc 	beq	9594 <getWaitLoop$>
    95a0:	e59f20bc 	ldr	r2, [pc, #188]	; 9664 <WaitForCycles+0x3c>
    95a4:	e5920000 	ldr	r0, [r2]
    95a8:	e1a0f00e 	mov	pc, lr

000095ac <WriteStringUART>:
    95ac:	e92d4030 	push	{r4, r5, lr}
    95b0:	e1a04000 	mov	r4, r0
    95b4:	e1a05001 	mov	r5, r1

000095b8 <writeLoop$>:
    95b8:	e3550000 	cmp	r5, #0
    95bc:	da000004 	ble	95d4 <writeLoopEnd$>
    95c0:	e5940000 	ldr	r0, [r4]
    95c4:	ebffffea 	bl	9574 <PutCharUART>
    95c8:	e2844001 	add	r4, r4, #1
    95cc:	e2455001 	sub	r5, r5, #1
    95d0:	eafffff8 	b	95b8 <writeLoop$>

000095d4 <writeLoopEnd$>:
    95d4:	e8bd8030 	pop	{r4, r5, pc}

000095d8 <ReadLineUART>:
    95d8:	e92d4070 	push	{r4, r5, r6, lr}
    95dc:	e1a04000 	mov	r4, r0
    95e0:	e1a05001 	mov	r5, r1
    95e4:	e3a06000 	mov	r6, #0

000095e8 <readLoop$>:
    95e8:	e1360005 	teq	r6, r5
    95ec:	0a00000b 	beq	9620 <readLoopEnd$>
    95f0:	ebffffe6 	bl	9590 <GetCharUART>
    95f4:	ebffffde 	bl	9574 <PutCharUART>
    95f8:	e5c40000 	strb	r0, [r4]
    95fc:	e2866001 	add	r6, r6, #1
    9600:	e2844001 	add	r4, r4, #1
    9604:	e330000d 	teq	r0, #13
    9608:	1afffff6 	bne	95e8 <readLoop$>
    960c:	e3a0000a 	mov	r0, #10
    9610:	ebffffd7 	bl	9574 <PutCharUART>
    9614:	e2444001 	sub	r4, r4, #1
    9618:	e3a00000 	mov	r0, #0
    961c:	e5c40000 	strb	r0, [r4]

00009620 <readLoopEnd$>:
    9620:	e2460001 	sub	r0, r6, #1
    9624:	e8bd8070 	pop	{r4, r5, r6, pc}

00009628 <WaitForCycles>:
    9628:	e2400001 	sub	r0, r0, #1
    962c:	e3500000 	cmp	r0, #0
    9630:	aafffffc 	bge	9628 <WaitForCycles>
    9634:	e1a0f00e 	mov	pc, lr
    9638:	20215004 	.word	0x20215004
    963c:	20215044 	.word	0x20215044
    9640:	20215060 	.word	0x20215060
    9644:	2021504c 	.word	0x2021504c
    9648:	20215050 	.word	0x20215050
    964c:	20215048 	.word	0x20215048
    9650:	20215068 	.word	0x20215068
    9654:	0000010e 	.word	0x0000010e
    9658:	20200094 	.word	0x20200094
    965c:	20200098 	.word	0x20200098
    9660:	20215054 	.word	0x20215054
    9664:	20215040 	.word	0x20215040

00009668 <GetGpioAddress>:
    9668:	e59f00cc 	ldr	r0, [pc, #204]	; 973c <GetGpio+0x44>
    966c:	e1a0f00e 	mov	pc, lr

00009670 <SetGpioFunction>:
    9670:	e3500035 	cmp	r0, #53	; 0x35
    9674:	93510007 	cmpls	r1, #7
    9678:	81a0f00e 	movhi	pc, lr
    967c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9680:	e1a02000 	mov	r2, r0
    9684:	ebfffff7 	bl	9668 <GetGpioAddress>

00009688 <functionLoop$>:
    9688:	e3520009 	cmp	r2, #9
    968c:	8242200a 	subhi	r2, r2, #10
    9690:	82800004 	addhi	r0, r0, #4
    9694:	8afffffb 	bhi	9688 <functionLoop$>
    9698:	e0822082 	add	r2, r2, r2, lsl #1
    969c:	e1a01211 	lsl	r1, r1, r2
    96a0:	e3a03007 	mov	r3, #7
    96a4:	e1a03213 	lsl	r3, r3, r2
    96a8:	e5902000 	ldr	r2, [r0]
    96ac:	e1c22003 	bic	r2, r2, r3
    96b0:	e1811002 	orr	r1, r1, r2
    96b4:	e5801000 	str	r1, [r0]
    96b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000096bc <SetGpio>:
    96bc:	e3500035 	cmp	r0, #53	; 0x35
    96c0:	81a0f00e 	movhi	pc, lr
    96c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    96c8:	e1a02000 	mov	r2, r0
    96cc:	ebffffe5 	bl	9668 <GetGpioAddress>
    96d0:	e1a032a2 	lsr	r3, r2, #5
    96d4:	e1a03103 	lsl	r3, r3, #2
    96d8:	e0800003 	add	r0, r0, r3
    96dc:	e202201f 	and	r2, r2, #31
    96e0:	e3a03001 	mov	r3, #1
    96e4:	e1a03213 	lsl	r3, r3, r2
    96e8:	e3310000 	teq	r1, #0
    96ec:	05803028 	streq	r3, [r0, #40]	; 0x28
    96f0:	1580301c 	strne	r3, [r0, #28]
    96f4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000096f8 <GetGpio>:
    96f8:	e3500035 	cmp	r0, #53	; 0x35
    96fc:	81a0f00e 	movhi	pc, lr
    9700:	e92d4010 	push	{r4, lr}
    9704:	e1a04000 	mov	r4, r0
    9708:	ebffffd6 	bl	9668 <GetGpioAddress>
    970c:	e1a032a4 	lsr	r3, r4, #5
    9710:	e1a03103 	lsl	r3, r3, #2
    9714:	e0800003 	add	r0, r0, r3
    9718:	e204401f 	and	r4, r4, #31
    971c:	e3a03001 	mov	r3, #1
    9720:	e1a03413 	lsl	r3, r3, r4
    9724:	e5904034 	ldr	r4, [r0, #52]	; 0x34
    9728:	e0044003 	and	r4, r4, r3
    972c:	e3340000 	teq	r4, #0
    9730:	03a00000 	moveq	r0, #0
    9734:	13a00001 	movne	r0, #1
    9738:	e8bd8010 	pop	{r4, pc}
    973c:	20200000 	.word	0x20200000
