
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea00050f 	b	9444 <main>

Disassembly of section .text:

000093b8 <EnableJTAG>:
    93b8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    93bc:	e59f0064 	ldr	r0, [pc, #100]	; 9428 <dowaitloop+0xc>
    93c0:	e0211001 	eor	r1, r1, r1
    93c4:	e5801000 	str	r1, [r0]
    93c8:	eb000012 	bl	9418 <dowait>
    93cc:	e59f0058 	ldr	r0, [pc, #88]	; 942c <dowaitloop+0x10>
    93d0:	e59f1058 	ldr	r1, [pc, #88]	; 9430 <dowaitloop+0x14>
    93d4:	e5801000 	str	r1, [r0]
    93d8:	eb00000e 	bl	9418 <dowait>
    93dc:	e0211001 	eor	r1, r1, r1
    93e0:	e5801000 	str	r1, [r0]
    93e4:	e59f0048 	ldr	r0, [pc, #72]	; 9434 <dowaitloop+0x18>
    93e8:	e5901000 	ldr	r1, [r0]
    93ec:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    93f0:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    93f4:	e5801000 	str	r1, [r0]
    93f8:	e59f0038 	ldr	r0, [pc, #56]	; 9438 <dowaitloop+0x1c>
    93fc:	e5901000 	ldr	r1, [r0]
    9400:	e59f2034 	ldr	r2, [pc, #52]	; 943c <dowaitloop+0x20>
    9404:	e1c11002 	bic	r1, r1, r2
    9408:	e59f2030 	ldr	r2, [pc, #48]	; 9440 <dowaitloop+0x24>
    940c:	e1811002 	orr	r1, r1, r2
    9410:	e5801000 	str	r1, [r0]
    9414:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009418 <dowait>:
    9418:	e3a02f4b 	mov	r2, #300	; 0x12c

0000941c <dowaitloop>:
    941c:	e2522001 	subs	r2, r2, #1
    9420:	1afffffd 	bne	941c <dowaitloop>
    9424:	e12fff1e 	bx	lr
    9428:	20200094 	.word	0x20200094
    942c:	20200098 	.word	0x20200098
    9430:	0bc00010 	.word	0x0bc00010
    9434:	20200000 	.word	0x20200000
    9438:	20200008 	.word	0x20200008
    943c:	00e3ffc0 	.word	0x00e3ffc0
    9440:	0061b6c0 	.word	0x0061b6c0

00009444 <main>:
    9444:	e3a0d902 	mov	sp, #32768	; 0x8000
    9448:	ebffffda 	bl	93b8 <EnableJTAG>
    944c:	eb000037 	bl	9530 <InitUART>
    9450:	e3a0a00a 	mov	sl, #10
    9454:	e3a0b064 	mov	fp, #100	; 0x64
    9458:	e59f00b4 	ldr	r0, [pc, #180]	; 9514 <haltLoop$+0x4>
    945c:	e3a01017 	mov	r1, #23
    9460:	eb000070 	bl	9628 <WriteStringUART>

00009464 <nameCHK>:
    9464:	e59f00ac 	ldr	r0, [pc, #172]	; 9518 <haltLoop$+0x8>
    9468:	e3a01026 	mov	r1, #38	; 0x26
    946c:	eb00006d 	bl	9628 <WriteStringUART>
    9470:	e59f00a4 	ldr	r0, [pc, #164]	; 951c <haltLoop$+0xc>
    9474:	e3a01c01 	mov	r1, #256	; 0x100
    9478:	eb000075 	bl	9654 <ReadLineUART>
    947c:	e59f0098 	ldr	r0, [pc, #152]	; 951c <haltLoop$+0xc>
    9480:	e5d02000 	ldrb	r2, [r0]

00009484 <atoi>:
    9484:	e2422030 	sub	r2, r2, #48	; 0x30

00009488 <error1>:
    9488:	e3520001 	cmp	r2, #1
    948c:	ba000002 	blt	949c <errorINVS>
    9490:	e3520009 	cmp	r2, #9
    9494:	ca000000 	bgt	949c <errorINVS>
    9498:	ea000003 	b	94ac <Grades>

0000949c <errorINVS>:
    949c:	e59f007c 	ldr	r0, [pc, #124]	; 9520 <haltLoop$+0x10>
    94a0:	e3a01042 	mov	r1, #66	; 0x42
    94a4:	eb00005f 	bl	9628 <WriteStringUART>
    94a8:	eaffffed 	b	9464 <nameCHK>

000094ac <Grades>:
    94ac:	e59f0070 	ldr	r0, [pc, #112]	; 9524 <haltLoop$+0x14>
    94b0:	e3a01024 	mov	r1, #36	; 0x24
    94b4:	eb00005b 	bl	9628 <WriteStringUART>
    94b8:	e2800004 	add	r0, r0, #4
    94bc:	e59f0058 	ldr	r0, [pc, #88]	; 951c <haltLoop$+0xc>
    94c0:	e3a01c01 	mov	r1, #256	; 0x100
    94c4:	eb000062 	bl	9654 <ReadLineUART>
    94c8:	e59f004c 	ldr	r0, [pc, #76]	; 951c <haltLoop$+0xc>
    94cc:	e5d05001 	ldrb	r5, [r0, #1]
    94d0:	e2455030 	sub	r5, r5, #48	; 0x30
    94d4:	e5d06000 	ldrb	r6, [r0]
    94d8:	e2466030 	sub	r6, r6, #48	; 0x30
    94dc:	e0275a96 	mla	r7, r6, sl, r5

000094e0 <error2>:
    94e0:	e3570005 	cmp	r7, #5
    94e4:	ba000002 	blt	94f4 <errorINVG>
    94e8:	e3570060 	cmp	r7, #96	; 0x60
    94ec:	ca000000 	bgt	94f4 <errorINVG>
    94f0:	ea000003 	b	9504 <cont>

000094f4 <errorINVG>:
    94f4:	e59f002c 	ldr	r0, [pc, #44]	; 9528 <haltLoop$+0x18>
    94f8:	e3a0103e 	mov	r1, #62	; 0x3e
    94fc:	eb000049 	bl	9628 <WriteStringUART>
    9500:	eaffffe9 	b	94ac <Grades>

00009504 <cont>:
    9504:	e59f0020 	ldr	r0, [pc, #32]	; 952c <haltLoop$+0x1c>
    9508:	e3a0100c 	mov	r1, #12
    950c:	eb000045 	bl	9628 <WriteStringUART>

00009510 <haltLoop$>:
    9510:	eafffffe 	b	9510 <haltLoop$>
    9514:	00009080 	.word	0x00009080
    9518:	00009097 	.word	0x00009097
    951c:	000092b5 	.word	0x000092b5
    9520:	00009255 	.word	0x00009255
    9524:	000090bd 	.word	0x000090bd
    9528:	00009217 	.word	0x00009217
    952c:	00009297 	.word	0x00009297

00009530 <InitUART>:
    9530:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9534:	e59f0178 	ldr	r0, [pc, #376]	; 96b4 <WaitForCycles+0x10>
    9538:	e3a01001 	mov	r1, #1
    953c:	e5801000 	str	r1, [r0]
    9540:	e59f0170 	ldr	r0, [pc, #368]	; 96b8 <WaitForCycles+0x14>
    9544:	e0211001 	eor	r1, r1, r1
    9548:	e5801000 	str	r1, [r0]
    954c:	e59f0168 	ldr	r0, [pc, #360]	; 96bc <WaitForCycles+0x18>
    9550:	e0211001 	eor	r1, r1, r1
    9554:	e5801000 	str	r1, [r0]
    9558:	e59f0160 	ldr	r0, [pc, #352]	; 96c0 <WaitForCycles+0x1c>
    955c:	e3a01003 	mov	r1, #3
    9560:	e5801000 	str	r1, [r0]
    9564:	e59f0158 	ldr	r0, [pc, #344]	; 96c4 <WaitForCycles+0x20>
    9568:	e0211001 	eor	r1, r1, r1
    956c:	e5801000 	str	r1, [r0]
    9570:	e59f0140 	ldr	r0, [pc, #320]	; 96b8 <WaitForCycles+0x14>
    9574:	e0211001 	eor	r1, r1, r1
    9578:	e5801000 	str	r1, [r0]
    957c:	e59f0144 	ldr	r0, [pc, #324]	; 96c8 <WaitForCycles+0x24>
    9580:	e3a010c6 	mov	r1, #198	; 0xc6
    9584:	e5801000 	str	r1, [r0]
    9588:	e59f013c 	ldr	r0, [pc, #316]	; 96cc <WaitForCycles+0x28>
    958c:	e59f113c 	ldr	r1, [pc, #316]	; 96d0 <WaitForCycles+0x2c>
    9590:	e5801000 	str	r1, [r0]
    9594:	e3a0000e 	mov	r0, #14
    9598:	e3a01002 	mov	r1, #2
    959c:	eb000052 	bl	96ec <SetGpioFunction>
    95a0:	e3a0000f 	mov	r0, #15
    95a4:	e3a01002 	mov	r1, #2
    95a8:	eb00004f 	bl	96ec <SetGpioFunction>
    95ac:	e59f0120 	ldr	r0, [pc, #288]	; 96d4 <WaitForCycles+0x30>
    95b0:	e0211001 	eor	r1, r1, r1
    95b4:	e5801000 	str	r1, [r0]
    95b8:	e3a00096 	mov	r0, #150	; 0x96
    95bc:	eb000038 	bl	96a4 <WaitForCycles>
    95c0:	e59f0110 	ldr	r0, [pc, #272]	; 96d8 <WaitForCycles+0x34>
    95c4:	e3a01903 	mov	r1, #49152	; 0xc000
    95c8:	e5801000 	str	r1, [r0]
    95cc:	e3a00096 	mov	r0, #150	; 0x96
    95d0:	eb000033 	bl	96a4 <WaitForCycles>
    95d4:	e59f00fc 	ldr	r0, [pc, #252]	; 96d8 <WaitForCycles+0x34>
    95d8:	e0211001 	eor	r1, r1, r1
    95dc:	e5801000 	str	r1, [r0]
    95e0:	e59f00d4 	ldr	r0, [pc, #212]	; 96bc <WaitForCycles+0x18>
    95e4:	e3a01003 	mov	r1, #3
    95e8:	e5801000 	str	r1, [r0]
    95ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000095f0 <PutCharUART>:
    95f0:	e59f20e4 	ldr	r2, [pc, #228]	; 96dc <WaitForCycles+0x38>

000095f4 <putWaitLoop$>:
    95f4:	e5921000 	ldr	r1, [r2]
    95f8:	e3110020 	tst	r1, #32
    95fc:	0afffffc 	beq	95f4 <putWaitLoop$>
    9600:	e59f20d8 	ldr	r2, [pc, #216]	; 96e0 <WaitForCycles+0x3c>
    9604:	e5820000 	str	r0, [r2]
    9608:	e1a0f00e 	mov	pc, lr

0000960c <GetCharUART>:
    960c:	e59f20c8 	ldr	r2, [pc, #200]	; 96dc <WaitForCycles+0x38>

00009610 <getWaitLoop$>:
    9610:	e5921000 	ldr	r1, [r2]
    9614:	e3110001 	tst	r1, #1
    9618:	0afffffc 	beq	9610 <getWaitLoop$>
    961c:	e59f20bc 	ldr	r2, [pc, #188]	; 96e0 <WaitForCycles+0x3c>
    9620:	e5920000 	ldr	r0, [r2]
    9624:	e1a0f00e 	mov	pc, lr

00009628 <WriteStringUART>:
    9628:	e92d4030 	push	{r4, r5, lr}
    962c:	e1a04000 	mov	r4, r0
    9630:	e1a05001 	mov	r5, r1

00009634 <writeLoop$>:
    9634:	e3550000 	cmp	r5, #0
    9638:	da000004 	ble	9650 <writeLoopEnd$>
    963c:	e5940000 	ldr	r0, [r4]
    9640:	ebffffea 	bl	95f0 <PutCharUART>
    9644:	e2844001 	add	r4, r4, #1
    9648:	e2455001 	sub	r5, r5, #1
    964c:	eafffff8 	b	9634 <writeLoop$>

00009650 <writeLoopEnd$>:
    9650:	e8bd8030 	pop	{r4, r5, pc}

00009654 <ReadLineUART>:
    9654:	e92d4070 	push	{r4, r5, r6, lr}
    9658:	e1a04000 	mov	r4, r0
    965c:	e1a05001 	mov	r5, r1
    9660:	e3a06000 	mov	r6, #0

00009664 <readLoop$>:
    9664:	e1360005 	teq	r6, r5
    9668:	0a00000b 	beq	969c <readLoopEnd$>
    966c:	ebffffe6 	bl	960c <GetCharUART>
    9670:	ebffffde 	bl	95f0 <PutCharUART>
    9674:	e5c40000 	strb	r0, [r4]
    9678:	e2866001 	add	r6, r6, #1
    967c:	e2844001 	add	r4, r4, #1
    9680:	e330000d 	teq	r0, #13
    9684:	1afffff6 	bne	9664 <readLoop$>
    9688:	e3a0000a 	mov	r0, #10
    968c:	ebffffd7 	bl	95f0 <PutCharUART>
    9690:	e2444001 	sub	r4, r4, #1
    9694:	e3a00000 	mov	r0, #0
    9698:	e5c40000 	strb	r0, [r4]

0000969c <readLoopEnd$>:
    969c:	e2460001 	sub	r0, r6, #1
    96a0:	e8bd8070 	pop	{r4, r5, r6, pc}

000096a4 <WaitForCycles>:
    96a4:	e2400001 	sub	r0, r0, #1
    96a8:	e3500000 	cmp	r0, #0
    96ac:	aafffffc 	bge	96a4 <WaitForCycles>
    96b0:	e1a0f00e 	mov	pc, lr
    96b4:	20215004 	.word	0x20215004
    96b8:	20215044 	.word	0x20215044
    96bc:	20215060 	.word	0x20215060
    96c0:	2021504c 	.word	0x2021504c
    96c4:	20215050 	.word	0x20215050
    96c8:	20215048 	.word	0x20215048
    96cc:	20215068 	.word	0x20215068
    96d0:	0000010e 	.word	0x0000010e
    96d4:	20200094 	.word	0x20200094
    96d8:	20200098 	.word	0x20200098
    96dc:	20215054 	.word	0x20215054
    96e0:	20215040 	.word	0x20215040

000096e4 <GetGpioAddress>:
    96e4:	e59f00cc 	ldr	r0, [pc, #204]	; 97b8 <GetGpio+0x44>
    96e8:	e1a0f00e 	mov	pc, lr

000096ec <SetGpioFunction>:
    96ec:	e3500035 	cmp	r0, #53	; 0x35
    96f0:	93510007 	cmpls	r1, #7
    96f4:	81a0f00e 	movhi	pc, lr
    96f8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    96fc:	e1a02000 	mov	r2, r0
    9700:	ebfffff7 	bl	96e4 <GetGpioAddress>

00009704 <functionLoop$>:
    9704:	e3520009 	cmp	r2, #9
    9708:	8242200a 	subhi	r2, r2, #10
    970c:	82800004 	addhi	r0, r0, #4
    9710:	8afffffb 	bhi	9704 <functionLoop$>
    9714:	e0822082 	add	r2, r2, r2, lsl #1
    9718:	e1a01211 	lsl	r1, r1, r2
    971c:	e3a03007 	mov	r3, #7
    9720:	e1a03213 	lsl	r3, r3, r2
    9724:	e5902000 	ldr	r2, [r0]
    9728:	e1c22003 	bic	r2, r2, r3
    972c:	e1811002 	orr	r1, r1, r2
    9730:	e5801000 	str	r1, [r0]
    9734:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009738 <SetGpio>:
    9738:	e3500035 	cmp	r0, #53	; 0x35
    973c:	81a0f00e 	movhi	pc, lr
    9740:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9744:	e1a02000 	mov	r2, r0
    9748:	ebffffe5 	bl	96e4 <GetGpioAddress>
    974c:	e1a032a2 	lsr	r3, r2, #5
    9750:	e1a03103 	lsl	r3, r3, #2
    9754:	e0800003 	add	r0, r0, r3
    9758:	e202201f 	and	r2, r2, #31
    975c:	e3a03001 	mov	r3, #1
    9760:	e1a03213 	lsl	r3, r3, r2
    9764:	e3310000 	teq	r1, #0
    9768:	05803028 	streq	r3, [r0, #40]	; 0x28
    976c:	1580301c 	strne	r3, [r0, #28]
    9770:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009774 <GetGpio>:
    9774:	e3500035 	cmp	r0, #53	; 0x35
    9778:	81a0f00e 	movhi	pc, lr
    977c:	e92d4010 	push	{r4, lr}
    9780:	e1a04000 	mov	r4, r0
    9784:	ebffffd6 	bl	96e4 <GetGpioAddress>
    9788:	e1a032a4 	lsr	r3, r4, #5
    978c:	e1a03103 	lsl	r3, r3, #2
    9790:	e0800003 	add	r0, r0, r3
    9794:	e204401f 	and	r4, r4, #31
    9798:	e3a03001 	mov	r3, #1
    979c:	e1a03413 	lsl	r3, r3, r4
    97a0:	e5904034 	ldr	r4, [r0, #52]	; 0x34
    97a4:	e0044003 	and	r4, r4, r3
    97a8:	e3340000 	teq	r4, #0
    97ac:	03a00000 	moveq	r0, #0
    97b0:	13a00001 	movne	r0, #1
    97b4:	e8bd8010 	pop	{r4, pc}
    97b8:	20200000 	.word	0x20200000
